#!/bin/bash

#Change tv_ip to the IP Address of your TV. It's recommended to set your TV IP to static or make a DHCP reservation on your modem/router to ensure this never changes.
tv_ip="192.168.X.X"
#Change tv_mac to the MAC address of your TV's network card (I'm using wired. Wireless is untested)
tv_mac="XX:XX:XX:XX:XX:XX"
#Change input to whichever input your PC is plugged into. E.g For HDMI4 change below to HDMI_4.
input="HDMI_1"

#Wait for local network to actually be connected.
nm-online -q -t 60

#TV network is sometimes off when in standby. Check for this
ping -c 1 $tv_ip >/dev/null && pingable=true || pingable=false

if [[ "$pingable" == true ]]
then
    #Get the current power state of the TV.
    power_state=$(/usr/bin/LG_Buddy_PIP/bin/bscpylgtvcommand $tv_ip get_power_state)
fi

#Expected value of power_state when TV is off (and its network is awake).
standby1="{'state': 'Active Standby', 'returnValue': True}"
standby2="{'returnValue': True, 'state': 'Active Standby'}"

#If the TV is off, proceed to turn it on. Otherwise do nothing.
if [[ "$pingable" == false ]]
then
    wakeonlan -q $tv_mac
    sleep 1
    /usr/bin/LG_Buddy_PIP/bin/bscpylgtvcommand $tv_ip set_input $input
elif [[ "$power_state" == "$standby1" || "$power_state" == "$standby2" ]]
then
    /usr/bin/LG_Buddy_PIP/bin/bscpylgtvcommand $tv_ip button POWER
    sleep 1
    /usr/bin/LG_Buddy_PIP/bin/bscpylgtvcommand $tv_ip set_input $input
else
    echo "TV is powered on already."
fi
